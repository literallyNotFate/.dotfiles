command_timeout = 3600

"$schema" = 'https://starship.rs/config-schema.json'

add_newline = true

format = """
 ➜\
$directory\
${custom.giturl}\
$git_branch\
$git_state\
$git_status\
$line_break\
$character
"""

right_format = """$all"""
palette = "vesper"

[palettes.vesper]
rosewater = "#d4a5a0"
flamingo = "#e85a75"
pink = "#d77394"
mauve = "#b19cd9"
red = "#ff6b7d"
maroon = "#c97aa8"
peach = "#ffb86c"
yellow = "#f1fa8c"
green = "#5af78e"
teal = "#8be9fd"
sky = "#74c7ec"
sapphire = "#89b4fa"
blue = "#8aa2d3"
lavender = "#cba6f7"
text = "#f8f8f2"
subtext1 = "#e0e0e0"
subtext0 = "#a0a0a0"
overlay2 = "#6272a4"
overlay1 = "#44475a"
overlay0 = "#383a59"
surface2 = "#282a36"
surface1 = "#21222c"
surface0 = "#191a21"
base = "#101010"
mantle = "#0a0a0a"
crust = "#000000"

[directory]
style = "teal"
format = "[ $path ]($style)"
#truncation_length = 4
#truncation_symbol = "…/"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "

[custom.giturl]
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "at $output"

[git_branch]
symbol = "[](black) "
# format =  ' [$symbol$branch(:$remote_branch)]($style)[]'
style = "fg:lavender bg:black"
format = '  on[$symbol$branch]($style)[](black)'

[git_status]
format = ' [($all_status$ahead_behind )]($style)'

[nodejs]
symbol = ""
format = ' [$symbol $version]($style) '

[c]
symbol = " "
format = " [$symbol$version]($style) "
style = "fg:#3776ab"

[custom.cpp]
detect_extensions = ['cpp', 'cc', 'hpp']
symbol = "󰙲 "
format = " [$symbol(v$output)]($style) "
command = "clang++ --version | awk '/clang version/{print $4}'"
disabled = false
ignore_timeout = false
style = "fg:#00599c"

[rust]
symbol = ""
format = ' [$symbol $version]($style) '

[golang]
symbol = ""
format = ' [$symbol $version]($style) '
detect_files = ["go.mod"]
style = "fg:#00add8"

[python]
symbol = ""
format = ' [$symbol $version]($style) '
style = "fg:#3776ab"

[zig]
symbol = '↯'
format = " [$symbol $version]($style) "
style = "fg:#f7a41d"

[cmake]
symbol = "△"
format = " [$symbol $version]($style) "

[docker_context]
symbol = ""
format = ' [$symbol $context]($style) '

[package]
symbol = '󰏗 '

[lua]
symbol = ' '

[dotnet]
format = ' [$symbol$version]($style) '
style = "fg:#68217a"

[time]
disabled = true
time_format = "%R"
style = "bg:peach"
format = '[[  $time ](fg:mantle bg:foam)]($style)'

[line_break]
disabled = true

[character]
disabled = false
success_symbol = '[𝘹](bold fg:green)'
error_symbol = '[𝘹](bold fg:red)'
vimcmd_symbol = '[](bold fg:creen)'
vimcmd_replace_one_symbol = '[](bold fg:purple)'
vimcmd_replace_symbol = '[](bold fg:purple)'
vimcmd_visual_symbol = '[](bold fg:lavender)'
